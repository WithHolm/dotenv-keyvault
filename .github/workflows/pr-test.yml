name: Test Changed Files

on:
  [push]

jobs:
  get_changed_files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            **/*_test.go
            **/*.go

      - name: List all changed files markdown files
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
  #     - name: Generate test matrix
  #       id: generate-matrix
  #       run: |
  #         TESTS=$(cat << EOF | jq -R -s -c 'split("\n")[:-1]'
  #         ${{ steps.changed-files.outputs.changed_files }}
  #         EOF
  #         )
  #         echo "matrix=$TESTS" >> $GITHUB_OUTPUT

  # run_tests:
  #   needs: get_changed_files
  #   if: ${{ fromJson(needs.test.outputs.matrix).matrix != '[]' }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       testfile: ${{ fromJson(needs.test.outputs.matrix).matrix }}
  #   steps:
  #     - uses: actions/checkout@v3
      
  #     - name: Set up Go
  #       uses: actions/setup-go@v4
  #       with:
  #         go-version: '1.21'

  #     - name: Run test ${{ matrix.testfile }}
  #       run: |
  #         dir=$(dirname ${{ matrix.testfile }})
  #         go test -v ./$dir -run $(basename ${{ matrix.testfile }} _test.go)